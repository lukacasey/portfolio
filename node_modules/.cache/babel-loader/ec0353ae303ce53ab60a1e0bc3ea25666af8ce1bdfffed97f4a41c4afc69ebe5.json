{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luka\\\\Desktop\\\\portfolio\\\\my-portfolio\\\\src\\\\Modal.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal(_ref) {\n  let {\n    closeModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalBackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => closeModal(false),\n        children: \" X \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"RESTful API for Order Management with MongoDB Integration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description: This project is a RESTful API for managing orders and customer information. It is built using Node.js and Express, and features MongoDB integration for data storage and management. The objective of the project is to provide a scalable and high-performing solution for managing orders, leveraging the power of MongoDB's NoSQL database. The API allows clients to perform CRUD (Create, Read, Update, Delete) operations on orders and customer data, and features authentication using JSON Web Tokens (JWT) for secure access to protected routes. The API also includes documentation using Swagger for easy reference. The project is designed to be extensible, allowing for the addition of new features and functionality as required. The use of MongoDB as the data store ensures that the API can handle large amounts of data and scale easily as needed. The codebase includes an OrdersDAO module, which provides a set of functions for interacting with the MongoDB database, ensuring separation of concerns and maintainability. Overall, this project demonstrates proficiency in designing and building a RESTful API with MongoDB integration, and provides a solid foundation for building scalable and high-performing web applications.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"See Code on github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","_ref","closeModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/luka/Desktop/portfolio/my-portfolio/src/Modal.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Modal({ closeModal }) {\r\n  return (\r\n    <div className=\"modalBackground\">\r\n      <div className=\"modalContainer\">\r\n        <button onClick={() => closeModal(false)}> X </button>\r\n        <div className=\"title\">\r\n          <h1>RESTful API for Order Management with MongoDB Integration</h1>\r\n        </div>\r\n        <div className=\"body\">\r\n          <p>\r\n            Description: This project is a RESTful API for managing orders and\r\n            customer information. It is built using Node.js and Express, and\r\n            features MongoDB integration for data storage and management. The\r\n            objective of the project is to provide a scalable and\r\n            high-performing solution for managing orders, leveraging the power\r\n            of MongoDB's NoSQL database. The API allows clients to perform CRUD\r\n            (Create, Read, Update, Delete) operations on orders and customer\r\n            data, and features authentication using JSON Web Tokens (JWT) for\r\n            secure access to protected routes. The API also includes\r\n            documentation using Swagger for easy reference. The project is\r\n            designed to be extensible, allowing for the addition of new features\r\n            and functionality as required. The use of MongoDB as the data store\r\n            ensures that the API can handle large amounts of data and scale\r\n            easily as needed. The codebase includes an OrdersDAO module, which\r\n            provides a set of functions for interacting with the MongoDB\r\n            database, ensuring separation of concerns and maintainability.\r\n            Overall, this project demonstrates proficiency in designing and\r\n            building a RESTful API with MongoDB integration, and provides a\r\n            solid foundation for building scalable and high-performing web\r\n            applications.\r\n          </p>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <a href=\"/\">See Code on github</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAAC,IAAA,EAAiB;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC3B,oBACEF,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BL,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BL,OAAA;QAAQM,OAAO,EAAEA,CAAA,KAAMH,UAAU,CAAC,KAAK,CAAE;QAAAE,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACtDV,OAAA;QAAKI,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBL,OAAA;UAAAK,QAAA,EAAI;QAAyD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9D,eACNV,OAAA;QAAKI,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBL,OAAA;UAAAK,QAAA,EAAG;QAqBH;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNV,OAAA;QAAKI,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBL,OAAA;UAAGW,IAAI,EAAC,GAAG;UAAAN,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACE,EAAA,GAtCQX,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}